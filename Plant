package javaapplication11;

import java.util.Random;

public class Plant {

    //mem vars
    private boolean isAlive = true;
    private String name;
    private boolean treeTrueFlowerFalse;
    private int heightCM = 1;
    private int maxHeightCM;

    //these mem vars simulate the plant taking in nutrients for photosynthesis
    private int sugar = 1;
    private int cO2 = 0;
    private int h2O = 0;
    private boolean light;

    public void passDay() {
        photosynthesis();
        grow();
    }//close method

    public void photosynthesis() {
        while (cO2 >= 6 && h2O >= 6 && light == true) {
            cO2 = cO2 - 6;
            h2O = h2O - 6;
            sugar = sugar + 1;
        }//close while
    }//close method

    private void grow() {
        if (sugar >= 2) {
            sugar = sugar - 2;
            heightCM = heightCM + 1;
        }//close if
        if (heightCM > maxHeightCM) {
            //In the garden class, we will check the isAlive status for each
            //plant object and if it is false, then we will delete it. But what 
            //I do not know is what will happen to the array. Will the array 
            //shift everything down to fill in the gap? IDK
            isAlive = false;
        }
    }//close method

    public void waterPlant() {
        h2O++;
    }//close waterPlant method

    public double getHeight() {
        return heightCM;
    }//close method

    public void setName(String newName) {
        name = newName;
    }//close method

    public String getName() {
        return name;
    }//close method

    public void setType(String type) {
        Random rand1 = new Random();
        if ("tree".equals(type)) {
            treeTrueFlowerFalse = true;
            maxHeightCM = rand1.nextInt(2500);
        } else if ("flower".equals(type)) {
            treeTrueFlowerFalse = false;
            maxHeightCM = rand1.nextInt(20);
        }//close if else
    }//close setType method

    public String getTypeString() {
        String type;
        if (treeTrueFlowerFalse) {
            type = "tree";
        } else {
            type = "flower";
        }
        return type;
    }//close getType method
    
    public boolean getTypeBool(){
        return treeTrueFlowerFalse;
    }//close getTypeBool

    public int getH2O() {
        return h2O;
    }//close getH2O method

    public int getCO2() {
        return cO2;
    }//close getCO2 method

    public boolean getLight() {
        return light;
    }//close getLight method

    public void turnLightON() {
        light = true;
    }//close turn Light on method
    
    public boolean getIsAlive(){
        return isAlive;
    }//close getIsAlive method
}//close class
